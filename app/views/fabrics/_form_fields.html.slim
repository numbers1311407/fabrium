= f.input :item_number

= f.input :archived, label: false, inline_label: true, hint: "Archived fabrics will not be displayed in buyer search results"

.form-group.property_select.materials(class = (f.object.errors[:materials].any? ? "has-error" : ""))
  = f.label :materials, class: 'control-label'
  select#fabric_tags(placeholder=t("placeholders.materials") data-select={plugins: {multiple_properties: {}}}.to_json )
    option(value="")
    = options_from_collection_for_select(Material.order(name: :asc), :id, :name)
  = f.error :materials
  script(type="html/template")
    | <div class="property-assignment" data-id="<%= id %>">
        <%= name %>
        <a href="javascript:void(0)" class="remove" tabindex="-1" title="Remove"> × </a>
        <input name="fabric[materials_attributes][<%= n %>][material_id]" value="<%= id %>" type="hidden" />
        <span>
          <input name="fabric[materials_attributes][<%= n %>][value]" type="number" value="0" max=100 min=0 step=1/>%
        </span>
      </div>
  .property-assignments(data-property-assignments)
    = f.simple_fields_for :materials do |p|
      .property-assignment(data-id=p.object.material_id)
        = p.object.name
        a(href="javascript:void(0)" class="remove" tabindex="-1" title="Remove") ×
        span
          = p.number_field :value, {max: 100, min: 0, step: 1}
          | %
        = p.hidden_field :_destroy, value: 0
        = p.hidden_field :material_id
    .totals
      span.totals-label= t('labels.total_material_percentage')
      span.totals-value
        input(type="text" disabled value="0") 
        | %

= f.input :width

= f.input :weight, as: :fabric_weight

= f.input :country do
  = f.country_select :country, {priority: %w(US CA), object: f.object, prompt: true}, id: "country_select", class: 'form-control'

.form-group.price_range
  = f.label :price
  .pricing_type_select
    = f.input_field :pricing_type, as: :select, collection: [["Exact Price", 0], ["Price Range", 1]], data: {select: {}}
  .price_range_inner
    .pricing_us.pricing_type
      = f.input :price_us_min, wrapper: :basic do
        .input-group
          span.input-group-addon $
          = f.input_field :price_us_min, class: "form-control", value: number_with_precision(f.object.price_us_min, precision: 2)
      .price_range_upper
        .price_range_sep to
        = f.input :price_us_max, wrapper: :basic do
          .input-group
            span.input-group-addon $
            = f.input_field :price_us_max, class: "form-control", value: number_with_precision(f.object.price_us_max, precision: 2)
    .pricing_eu.pricing_type
      = f.input :price_eu_min, wrapper: :basic do
        .input-group
          span.input-group-addon €
          = f.input_field :price_eu_min, class: "form-control", value: number_with_precision(f.object.price_eu_min, precision: 2)
      .price_range_upper
        .price_range_sep to
        = f.input :price_eu_max, wrapper: :basic do
          .input-group
            span.input-group-addon €
            = f.input_field :price_eu_max, class: "form-control", value: number_with_precision(f.object.price_eu_max, precision: 2)

= f.input :sample_lead_time, as: :select, collection: weeks_select_options, input_html: { data: { select: {} }}

= f.input :bulk_lead_time, as: :select, collection: weeks_select_options, input_html: { data: { select: {} }}

= f.input :sample_minimum_quality

= f.input :bulk_minimum_quality

= f.association :category, as: :select, collection: Category.all.order(name: :asc).limit(20), input_html: {data: {select: {plugins: {endpoint: {url: categories_path(:json)}}}}}

= f.association :dye_method, as: :select, collection: DyeMethod.all.order(name: :asc).limit(20), input_html: {data: {select: {plugins: {endpoint: {url: dye_methods_path(:json)}}}}}

/ some oddness here as tags is not an association
= f.input :tag_ids, label: resource_label(:tags), as: :select, collection: f.object.tag_records, hint: :translate, input_html: {multiple: true, placeholder: t('placeholders.tags'), data: {select: {plugins: {endpoint: {url: tags_path(:json) }}}}}
