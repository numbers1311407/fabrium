- variant = cart_item.fabric_variant
- fabric = variant.fabric

.cart-item(data-id=cart_item.id)
  .col-thumb
    = link_to fabric_path_with_variant(fabric, variant) do
      = image_tag(cart_item.fabric_variant.thumb.url)
  .col-fields
    p.line-item
      label 
        = link_to fabric_path_with_variant(fabric, variant) do
          | Fabrium #: #{cart_item.fabrium_id}
      - if variant.in_stock?
        span.badge.badge-success In Stock
    - unless current_user.is_buyer?
      p.line-item: label Item #: #{variant.combined_item_number}

    - if cart_item.sample_yardage.present? && current_user.is_buyer?
      = fake_input(:sample_yardage, cart_item)

    - if cart_item.deletable_by?(current_user)
      = link_to cart_cart_item_path(cart, cart_item.fabric_variant_id), class: 'remove btn btn-default', method: :delete, remote: true do
        span Remove

    / if this is a mill show the sample yardage field
    - if current_user.is_mill? && current_user.meta.active? && resource.state >= :ordered
      = f.input :sample_yardage
    / otherwise finally if this is a buyer, show the field to reques the yardage
    - elsif current_user.is_buyer? && cart_item.sample_yardage.blank?
      = f.input :request_yardage, label: false, inline_label: true

    / Buyer always sees the notes in this form
    - if current_user.is_buyer?
      = f.input :notes, as: :text, input_html: { rows: 3 }

    / Otherwise show the notes unless this is an initial
    / build (the notes will be blank)
    - elsif !cart.mill_build?
      = fake_input(:notes, cart_item)
